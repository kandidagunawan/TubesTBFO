Terminals:
( ) none , and or not true false + - * ** / % = < > ! is in " ' [ ] ; { } for : # if else switch while break continue pass return range function class from import as with nl
IDiables:
SS NL ALPHABET DIGIT OTHER SYNTAX BODY SERU HASHTAG PERSEN NBO NBC MUL PLUS MIN COMMA POW DIVIDE DIVIDEQ COLON LESS EQUAL GREAT SBO SBC UNDERSCORE CBR CBL PETIK1 PETIK2 ALPHANUM STRING_WORD ID_FIRST ID VALUE NUMBER VV BOOLEAN OP EXPRESSION RELATION STRING ARRAY RANGE DICT_CONTENT DICT COMMENT IF_HEADER IF ELIF_HEADER ELIF ELSE WHILE WHILE_HEADER FOR_HEADER FOR FOR_ID ITERABLE ITERATE CONTINUES BREAK PASS DEF_HEADER DEF_S DEF RETURN FUNC_BODY IF_FUNC ELIF_FUNC ELSE_FUNC WHILE_FUNC FOR_FUNC WITH_FUNC ITERATE_FUNC BREAK_FUNC CONTINUE_FUNC CLASS CLASS_HEADER CLASS_S IMP_S IMPORT WITHS WITH_HEADER FUNCTION NONES ANDS ORS ISS INS TRUES FALSES NOTS FORS IFS ELIFS ELSES WHILES BREAKS CONTINUES DEFS RETURNS RANGES CLASSS FROMS IMPORTS ASS WITHS MULEQ POWEQ PLUSEQ MODEQ LESSEQ GREATEQ NEQ ISEQ
Production:
SS -> SS NL SS | NL SS | SS NL | IF | WHILE | FOR | SWITCH | IMPORT | COMMENT | BREAKS | FUNCTION | CLASS | CONTINUES | WITHS | PASS | ID EQUAL VV | ID OP EQUAL VV | NONES | VV
ALPHABET -> a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z
DIGIT -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
OTHER -> $ | & | . | ? | @ | \ | ^ | ` | ~ | SERU | HASHTAG | PERSEN | LP | LR | MUL | PLUS | MIN | COMMA | DIVIDE | COLON | SEMICOLON | LESS | EQUAL | GREAT | SBR | SBL | UNDERSCORE | CBR | CBL
SYNTAX -> DOLLARS | LETS | IDIABLES | CONSTANTS | NONES | ANDS | ORS | ISS | INS | TRUES | NOTS | FORS | IFS | IFSELSES | ELSES | DO | WHILES | BREAKS | CONTINUES | RETURNS | RANGES | CLASSS | FROMS | IMPORTS | ASS | WITHS | PASS
RANGES -> range
PASS -> pass
NL -> NL NL | ; | nl
ID_HEADER -> LETS | CONSTANTS | IDIABLES
ID_NAME -> IDIABLE_HEADER ALPHABET | IDIABLE_HEADER UNDERSCORE | IDIABLE_HEADER DOLLARS | ALPHABET | UNDERSCORE | DOLLARS
ALPHANUM -> ALPHANUM ALPHANUM | DIGIT | ID_FIRST
ID -> ID_FIRST ALPHANUM | ID_FIRST
NUMBER -> NUMBER NUMBER | DIGIT
STRING_WORD -> STRING_WORD STRING_WORD | ALPHABET | DIGIT | OTHER | SYNTAX
VALUE -> NUMBER | BOOLEAN | STRING | ARRAY
VV -> VV COMMA VV | VALUE | ID | VV IFS EXPRESSION ELSES VV
BOOLEAN -> BOOLEAN ANDS BOOLEAN | BOOLEAN ORS BOOLEAN | NOTS BOOLEAN | VV RELATION VV | TRUES | FALSES | NBO BOOLEAN NBC | VALUE | ID
OP -> PLUS | MIN | MUL | DIVIDE | DIV | POW | PERSEN
EXPRESSION -> BOOLEAN | RP BOOLEAN LP
RELATION -> GREAT EQUAL | LESS EQUAL | EQUAL EQUAL | SERU EQUAL | LESS | GREAT | ISS | ISS NOTS | INS | NOTS INS
STRING -> STRING STRING | PETIK1 STRING PETIK1 | PETIK2 STRING PETIK2
ARRAY -> SBR VV SBL | SBR SBL
BODY -> STRING_WORD | BODY NL BODY | NL BODY | BODY NL
COMMENT -> DIVIDE DIVIDE BODY | DIVIDE MUL BODY DIVIDE MUL
IF_HEADER -> IF RP EXPRESSION LP CBR NL
IF -> IF_HEADER SS CBL | IF_HEADER NL CBL | IF_HEADER NL CBL IFELSE | IF_HEADER NL ELSE | IF_HEADER BREAKS NL SS CBL | IF_HEADER CONTINUES NL SS CBL
IFELSES_HEADER -> IFELSES RP EXPRESSION LP CBR NL 
IFELSE -> IFELSES_HEADER SS CBL | IFELSES NL CBL IFELSES | IFELSES_HEADER BREAKS NL SS CBL | IFELSES_HEADER CONTINUES NL SS CBL | IFELSES_HEADER CONTINUES CBL | IFELSES_HEADER BREAKS CBL
ELSE_HEADER -> ELSES RP EXPRESSION LP CBR NL 
ELSE -> ELSES SS CBL | ELSES NL CBL | ELSES BREAKS CBL | ELSES CONTINUES CBL
SWITCH_HEADER -> SWITCHS RP EXPRESSION LP CBR 
SWITCH -> CASE NUMBER COLON NL SS | CASE NUMBER COLON NL SS BREAKS | CASE NUMBER COLON NL SS CONTINUES | CASE NUMBER COLON NL SS | DEFAULT COLON NL SS 
WHILE_HEADER ->  WHILES RP EXPRESSION LP CBR EXPRESSION CBL | WHILES RP EXPRESSION LP CBR EXPRESSION 
WHILE -> WHILE_HEADER SS CBL
DOWHILE_HEADER -> DOS CBR EXPRESSION NL
DOWHILE -> DOWHILE_HEADER SS CBR WHILE NL 
FOR_HEADER -> FORS RP ID_FIRST NL SS NL SS CBR | FORS RP 
FOR -> FOR_HEADER SS NL CBL 
ITERATE -> FOR_HEADER | WHILE_HEADER | DOWHILE_HEADER | FOR | WHILE | DOWHILE 
FUNCTION_HEADER -> FUNCTIONS SS RP SS LP CBR NL
FUNCTION -> FUNCTION_HEADER EXPRESSION NL CBL | IF | IFLESE | ELSE | SWITCH | WHILE | DOWHILE | FOR 
IMPORT -> IMPORTS SS FROMS | IMPORTS CBR ID CBL FROMS
IMPORT_NXT -> MUL | ID ASS ID | ID | IMPORT_NXT NL
ARIT -> ID OPERATOR ARIT | OPERATOR ID | ID OPERATOR ID | RP ARIT LP | 
OPERATOR -> PERSEN | MODEQ | MUL | MULEQ | POW | POWEQ | PLUS | PLUSEQ | MIN | MINEQ |DIVIDE | DIVIDEQ | LESS | LESSEQ | EQUAL | ISEQ | NEQ | GREAT | GREATEQ 
SERU -> !
HASHTAG -> #
PERSEN -> %
MODEQ -> %=
RP -> (
LP -> )
MUL -> *
MULEQ -> *=
POW -> **
POWEQ -> **=
PLUS -> +
PLUSEQ -> +=
MIN -> -
MINEQ -> -=
COMMA -> ,
DIVIDE -> /
DIVIDEQ -> /=
COLON -> :
SEMICOLON -> ;
LESS -> <
LESSEQ -> <=
EQUAL -> =
ISEQ -> ==
NEQ -> !=
GREAT -> >
GREATEQ -> >=
SBR -> [
SBL -> ]
UNDERSCORE -> _
CBR -> {
CBL -> }
PETIK1 -> '
PETIK2 -> "
DOLLARS -> $
LETS -> let
IDIABLES -> ID
CONSTANTS -> const
NONES -> none
ANDS -> and
ORS -> or
ISS -> is
INS -> in
NOTS -> not
TRUES -> true
FALSES -> false
FORS -> for
IFS -> if
ELSES -> else
IFSELSES -> ELSES IFS
SWITCHS -> switch
BREAKS -> break
CONTINUES -> continue
DOS -> do
WHILES -> while
RETURNS -> return
FUNCTIONS -> function
CLASS -> class
FROMS -> from
IMPORTS -> import
ASS -> as
WITHS -> with
CASES -> case
DEFAULT -> default